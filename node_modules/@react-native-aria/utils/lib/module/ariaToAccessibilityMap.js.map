{"version":3,"sources":["ariaToAccessibilityMap.ts"],"names":["React","ariaToAccessibilityMap","mapDomPropsToRN","props","newProps","id","nativeID","key","indexOf","dataSet","split","useMapDomPropsToRN","ref","useEffect","current","tabIndex"],"mappings":"AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,OAAO,MAAMC,sBAA2B,GAAG;AACzC,2BAAyB,+BADgB;AAEzC,iBAAe,qBAF0B;AAGzC,uBAAqB,2BAHoB;AAIzC,eAAa,mBAJ4B;AAKzC,kBAAgB,sBALyB;AAMzC,mBAAiB,0BANwB;AAOzC,mBAAiB,0BAPwB;AAQzC,kBAAgB,yBARyB;AASzC,mBAAiB,uBATwB;AAUzC,sBAAoB,0BAVqB;AAWzC,kBAAgB,sBAXyB;AAYzC,mBAAiB,uBAZwB;AAazC,uBAAqB,2BAboB;AAczC,mBAAiB,uBAdwB;AAezC,iBAAe,qBAf0B;AAgBzC,mBAAiB,uBAhBwB;AAiBzC,iBAAe,qBAjB0B;AAkBzC,kBAAgB,sBAlByB;AAmBzC,uBAAqB,2BAnBoB;AAoBzC,gBAAc,oBApB2B;AAqBzC,qBAAmB,yBArBsB;AAsBzC,eAAa,yBAtB4B;AAuBzC,gBAAc,oBAvB2B;AAwBzC,oBAAkB,wBAxBuB;AAyBzC,0BAAwB,8BAzBiB;AA0BzC,sBAAoB,0BA1BqB;AA2BzC,eAAa,mBA3B4B;AA4BzC,sBAAoB,0BA5BqB;AA6BzC,mBAAiB,uBA7BwB;AA8BzC,kBAAgB,sBA9ByB;AA+BzC,mBAAiB,uBA/BwB;AAgCzC,mBAAiB,uBAhCwB;AAiCzC,0BAAwB,8BAjCiB;AAkCzC,mBAAiB,uBAlCwB;AAmCzC,mBAAiB,uBAnCwB;AAoCzC,kBAAgB,sBApCyB;AAqCzC,mBAAiB,uBArCwB;AAsCzC,kBAAgB,sBAtCyB;AAuCzC,eAAa,mBAvC4B;AAwCzC,mBAAiB,uBAxCwB;AAyCzC,mBAAiB,uBAzCwB;AA0CzC,mBAAiB,uBA1CwB;AA2CzC,oBAAkB;AA3CuB,CAApC,C,CA8CP;;AACA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AAC7C,MAAIC,QAAa,GAAG,EAAE,GAAGD;AAAL,GAApB,CAD6C,CAG7C;AACA;AACA;AACA;AACA;;AAEA,MAAIA,KAAK,CAACE,EAAV,EAAc;AACZD,IAAAA,QAAQ,CAACE,QAAT,GAAoBH,KAAK,CAACE,EAA1B;AACD;;AAED,OAAK,IAAIE,GAAT,IAAgBJ,KAAhB,EAAuB;AACrB,QAAII,GAAG,CAACC,OAAJ,CAAY,OAAZ,IAAuB,CAAC,CAA5B,EAA+B;AAC7B,UAAI,CAACJ,QAAQ,CAACK,OAAd,EAAuB;AACrBL,QAAAA,QAAQ,CAACK,OAAT,GAAmB,EAAnB;AACD;;AAEDL,MAAAA,QAAQ,CAACK,OAAT,CAAiBF,GAAG,CAACG,KAAJ,CAAU,OAAV,EAAmB,CAAnB,CAAjB,IAA0CP,KAAK,CAACI,GAAD,CAA/C;AACD;AACF;;AAED,SAAOH,QAAP;AACD,CAxBM,C,CA0BP;AACA;AACA;;AACA,OAAO,MAAMO,kBAAkB,GAAG,CAACR,KAAD,EAAaS,GAAb,KAAqC;AACrEZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAID,GAAG,CAACE,OAAR,EAAiB;AACfF,MAAAA,GAAG,CAACE,OAAJ,CAAYC,QAAZ,GAAuBZ,KAAK,CAACY,QAA7B;AACD;AACF,GAJD,EAIG,CAACZ,KAAK,CAACY,QAAP,CAJH;AAMA,SAAOb,eAAe,CAACC,KAAD,CAAtB;AACD,CARM","sourcesContent":["import React, { RefObject } from 'react';\n\nexport const ariaToAccessibilityMap: any = {\n  'aria-activedescendant': 'accessibilityActiveDescendant',\n  'aria-atomic': 'accessibilityAtomic',\n  'aria-autocomplete': 'accessibilityAutoComplete',\n  'aria-busy': 'accessibilityBusy',\n  'aria-checked': 'accessibilityChecked',\n  'aria-colcount': 'accessibilityColumnCount',\n  'aria-colindex': 'accessibilityColumnIndex',\n  'aria-colspan': 'accessibilityColumnSpan',\n  'aria-controls': 'accessibilityControls',\n  'aria-describedby': 'accessibilityDescribedBy',\n  'aria-details': 'accessibilityDetails',\n  'aria-disabled': 'accessibilityDisabled',\n  'aria-errormessage': 'accessibilityErrorMessage',\n  'aria-expanded': 'accessibilityExpanded',\n  'aria-flowto': 'accessibilityFlowTo',\n  'aria-haspopup': 'accessibilityHasPopup',\n  'aria-hidden': 'accessibilityHidden',\n  'aria-invalid': 'accessibilityInvalid',\n  'aria-keyshortcuts': 'accessibilityKeyShortcuts',\n  'aria-label': 'accessibilityLabel',\n  'aria-labelledby': 'accessibilityLabelledBy',\n  'aria-live': 'accessibilityLiveRegion',\n  'aria-modal': 'accessibilityModal',\n  'aria-multiline': 'accessibilityMultiline',\n  'aria-multiselectable': 'accessibilityMultiSelectable',\n  'aria-orientation': 'accessibilityOrientation',\n  'aria-owns': 'accessibilityOwns',\n  'aria-placeholder': 'accessibilityPlaceholder',\n  'aria-posinset': 'accessibilityPosInSet',\n  'aria-pressed': 'accessibilityPressed',\n  'aria-readonly': 'accessibilityReadOnly',\n  'aria-required': 'accessibilityRequired',\n  'aria-roledescription': 'accessibilityRoleDescription',\n  'aria-rowcount': 'accessibilityRowCount',\n  'aria-rowindex': 'accessibilityRowIndex',\n  'aria-rowspan': 'accessibilityRowSpan',\n  'aria-selected': 'accessibilitySelected',\n  'aria-setsize': 'accessibilitySetSize',\n  'aria-sort': 'accessibilitySort',\n  'aria-valuemax': 'accessibilityValueMax',\n  'aria-valuemin': 'accessibilityValueMin',\n  'aria-valuenow': 'accessibilityValueNow',\n  'aria-valuetext': 'accessibilityValueText',\n};\n\n// Refer - https://necolas.github.io/react-native-web/docs/accessibility/\nexport const mapDomPropsToRN = (props: any) => {\n  let newProps: any = { ...props };\n\n  // use the below hook for tabIndex\n  // useMapDomPropsToRN\n  // if (props.tabIndex === '-1' || props.tabIndex === -1) {\n  //   newProps.focusable = false;\n  // }\n\n  if (props.id) {\n    newProps.nativeID = props.id;\n  }\n\n  for (let key in props) {\n    if (key.indexOf('data-') > -1) {\n      if (!newProps.dataSet) {\n        newProps.dataSet = {};\n      }\n\n      newProps.dataSet[key.split('data-')[1]] = props[key];\n    }\n  }\n\n  return newProps;\n};\n\n// RN web currently doesn't allow setting tabIndex via props, so need to be set using setNativeProps or ref\n// https://github.com/necolas/react-native-web/issues/1916\n// https://github.com/necolas/react-native-web/issues/1099\nexport const useMapDomPropsToRN = (props: any, ref: RefObject<any>) => {\n  React.useEffect(() => {\n    if (ref.current) {\n      ref.current.tabIndex = props.tabIndex;\n    }\n  }, [props.tabIndex]);\n\n  return mapDomPropsToRN(props);\n};\n"]}